The latest version of Julia in the `release` channel is 1.11.6+0.aarch64.apple.darwin14. You currently have `1.11.2+0.aarch64.apple.darwin14` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.11.6+0.aarch64.apple.darwin14 and update the `release` channel to that version.
Simple continuous variable: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:19
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Term}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:21 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:20 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:19 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Simple categorical variable: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:27
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Term}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:29 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:28 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:19 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Multiple continuous variables: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:35
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Tuple{Term, Term}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:37 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:36 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:19 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Simple 2-way continuous interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:45
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Tuple{Term, Term, InteractionTerm{Tuple{Term, Term}}}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:47 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:46 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:45 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Continuous × Categorical interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:53
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Tuple{Term, Term, InteractionTerm{Tuple{Term, Term}}}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:55 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:54 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:45 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
3-way interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:61
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Tuple{Term, Term, Term, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term, Term}}}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:63 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:62 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:45 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
4-way interaction (Kronecker ordering test): Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:70
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Tuple{Term, Term, Term, Term, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term, Term}}, InteractionTerm{Tuple{Term, Term, Term}}, InteractionTerm{Tuple{Term, Term, Term}}, InteractionTerm{Tuple{Term, Term, Term}}, InteractionTerm{NTuple{4, Term}}}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:72 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:71 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:45 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Simple function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:81
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, FunctionTerm{typeof(log), Vector{Term}}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:83 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:82 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:81 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Function × Categorical interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:89
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Tuple{FunctionTerm{typeof(log), Vector{Term}}, Term, InteractionTerm{Tuple{FunctionTerm{typeof(log), Vector{Term}}, Term}}}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:91 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:90 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:81 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Complex mixed formula: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:99
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Tuple{Term, Term, Term, FunctionTerm{typeof(log), Vector{Term}}, Term, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{Term, Term}}, InteractionTerm{Tuple{FunctionTerm{typeof(log), Vector{Term}}, Term}}, InteractionTerm{Tuple{Term, Term, Term}}}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:101 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:100 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:99 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Intercept only: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:110
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, ConstantTerm{Int64}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:112 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:111 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:110 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
No intercept: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:118
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_formula_correctness(formula::FormulaTerm{Term, Tuple{ConstantTerm{Int64}, Term}}, df::DataFrame, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:57
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:120 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:119 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:110 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Same formula produces same positions: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:128
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:133 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:129 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:128 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Timing benchmarks: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:154
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:158 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:156 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:154 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_position_mapping.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Intercept only: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
No intercept: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Simple continuous: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Simple categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Multiple continuous: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Multiple categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Simple interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Interaction w/o main: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Function in interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Three-way interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Four-way interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Four-way w/ function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Complex interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:23
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:25 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:22 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Logistic: simple: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Logistic: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Logistic: interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Logistic: function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Logistic: complex: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Poisson: simple: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Poisson: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Poisson: interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Gamma: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Gamma{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Gamma{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Gaussian: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:38
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Normal{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Normal{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:40 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:39 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Random intercept: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:51
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:53 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:50 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Mixed + categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:51
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:53 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:50 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Random slope: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:51
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:53 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:50 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Random slope + cat: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:51
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:53 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:50 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Multiple random: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:51
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:53 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:50 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Interaction + random: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:51
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:53 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:50 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Logistic: 1: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:64
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:66 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:65 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:63 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Logistic: 2: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:64
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:66 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:65 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:63 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Poisson: 1: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:64
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:66 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:65 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:63 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Poisson: 2: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_allocations.jl:64
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_zero_allocation(model::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:89
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:66 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:65 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:63 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_allocations.jl:14
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:30 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Intercept only: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Intercept only: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
No intercept: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
No intercept: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Simple continuous: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Simple continuous: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Simple categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Simple categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Multiple continuous: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Multiple continuous: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Multiple categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Multiple categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Simple interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Simple interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Interaction w/o main: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Interaction w/o main: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Function in interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Function in interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Three-way interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Three-way interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Four-way interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Four-way interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Four-way w/ function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Four-way w/ function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Complex interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:24
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:24 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Complex interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:22
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:27 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:23 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:21 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Logistic: simple: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Logistic: simple: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Logistic: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Logistic: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Logistic: interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Logistic: interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Logistic: function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Logistic: function: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Logistic: complex: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Logistic: complex: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Poisson: simple: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Poisson: simple: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Poisson: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Poisson: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Poisson: interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Poisson: interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Poisson{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Gamma: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Gamma{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Gamma{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Gamma: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Gamma{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Gaussian: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:38
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Normal{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Normal{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:38 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Gaussian: mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:36
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Normal{Float64}, LogLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:41 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:37 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:35 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Random intercept: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:52
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Random intercept: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:50
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:55 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Mixed + categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:52
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Mixed + categorical: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:50
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:55 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Random slope: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:52
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Random slope: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:50
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:55 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Random slope + cat: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:52
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Random slope + cat: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:50
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:55 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Multiple random: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:52
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Multiple random: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:50
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:55 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Interaction + random: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:52
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:52 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Interaction + random: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:50
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:55 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:51 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:49 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Logistic: 1: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:66
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:66 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:66 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:65 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:63 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Logistic: 1: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:64
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:69 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:65 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:63 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Logistic: 2: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:66
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:66 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:66 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:65 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:63 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Logistic: 2: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:64
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Bernoulli{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:69 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:65 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:63 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Poisson: 1: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:66
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:66 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:66 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:65 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:63 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Poisson: 1: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:64
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:69 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:65 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:63 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Poisson: 2: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:66
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:66 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:66 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:65 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:63 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Poisson: 2: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:64
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::GeneralizedLinearMixedModel{Float64, Poisson{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:69 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:65 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:63 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Complex LM interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:81
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:81 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:81 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:79 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:78 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Complex GLM interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:87
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:87 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:87 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:85 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:78 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
Complex LMM interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:93
  Test threw exception
  Expression: test_model_correctness(model, data, n)
  MethodError: no method matching compile_formula(::LinearMixedModel{Float64}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] test_model_correctness(model::LinearMixedModel{Float64}, data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}}, n::Int64)
      @ Main ~/.julia/dev/FormulaCompiler/test/support/testing_utilities.jl:102
    [2] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:93 [inlined]
    [3] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:676 [inlined]
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:93 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:91 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:78 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
ModelRow Interface Tests: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:97
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:100 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:99 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Scenario Integration Correctness: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:137
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:140 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:139 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Single row datasets: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:170
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:179 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:174 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:170 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Extreme values correctness: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_models.jl:186
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, z::Vector{Float64}, w::Vector{Float64}, t::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, subject::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, cluster::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}, flag::Vector{Bool}, continuous_response::Vector{Float64}, binary_response::Vector{Int64}, count_response::Vector{Int64}, linear_predictor::Vector{Float64}, logistic_response::Vector{Int64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:199 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:188 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:170 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_models.jl:13
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:31 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Categorical Override Creation: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_overrides.jl:73
  Got exception outside of a @test
  MethodError: no method matching create_categorical_override(::Symbol, ::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}})
  The function `create_categorical_override` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    create_categorical_override(!Matched::CategoricalValue, ::CategoricalArray)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:60
    create_categorical_override(!Matched::AbstractString, ::CategoricalArray)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:47
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:85 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:75 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:13
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:34 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Categorical Scenario Creation: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_overrides.jl:95
  Got exception outside of a @test
  MethodError: no method matching create_categorical_override(::Symbol, ::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}})
  The function `create_categorical_override` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    create_categorical_override(!Matched::CategoricalValue, ::CategoricalArray)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:60
    create_categorical_override(!Matched::AbstractString, ::CategoricalArray)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:47
  
  Stacktrace:
    [1] create_override_vector(value::Symbol, original_column::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:168
    [2] create_override_data(original_data::@NamedTuple{x::Vector{Float64}, group::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, treatment::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}}, overrides::Dict{Symbol, Any})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:150
    [3] create_scenario(name::String, original_data::@NamedTuple{x::Vector{Float64}, group::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, treatment::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}}; overrides::@Kwargs{group::Symbol})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:119
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:110 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:96 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:34 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Formula Integration with Overrides: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_overrides.jl:127
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{group::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, y::Vector{Float64}, treatment::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, x::OverrideVector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:144 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:129 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:13
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:34 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Edge Cases and Error Handling: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_overrides.jl:247
  Got exception outside of a @test
  MethodError: no method matching create_categorical_override(::Symbol, ::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}})
  The function `create_categorical_override` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    create_categorical_override(!Matched::CategoricalValue, ::CategoricalArray)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:60
    create_categorical_override(!Matched::AbstractString, ::CategoricalArray)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:47
  
  Stacktrace:
    [1] create_override_vector(value::Symbol, original_column::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:168
    [2] create_override_data(original_data::@NamedTuple{x::Vector{Float64}, group::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}}, overrides::Dict{Symbol, Any})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:150
    [3] create_scenario(name::String, original_data::@NamedTuple{x::Vector{Float64}, group::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}}; overrides::@Kwargs{group::Symbol})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:119
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:267 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:249 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_overrides.jl:13
    [9] include(fname::String)
      @ Main ./sysimg.jl:38
   [10] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:34 [inlined]
   [11] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [12] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [13] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [14] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [15] _start()
      @ Base ./client.jl:531
Varying cts. variable: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:42
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, x::OverrideVector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:51 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:43 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:40
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Varying cat. variable: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:62
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:72 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:63 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:40
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Level: Low: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:97
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:101 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:99 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:93 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Level: Med: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:97
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:101 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:99 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:93 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Level: High: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:97
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:101 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:99 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:93 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
all_reference: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:146
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::OverrideVector{CategoricalValue{String, UInt32}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::OverrideVector{CategoricalValue{String, UInt32}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:148 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:147 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:136 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
all_last: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:146
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::OverrideVector{CategoricalValue{String, UInt32}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::OverrideVector{CategoricalValue{String, UInt32}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:148 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:147 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:136 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
mixed: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:146
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::OverrideVector{CategoricalValue{String, UInt32}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::OverrideVector{CategoricalValue{String, UInt32}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:148 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:147 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:136 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Categorical in Interaction: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:176
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::OverrideVector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:184 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:178 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Binary = true: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:236
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::OverrideVector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:239 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:237 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:232 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Binary = false: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:236
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::OverrideVector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:239 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:237 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:232 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
Test 5: Categorical-Only Formula with Complete Override: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:268
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::OverrideVector{CategoricalValue{String, UInt32}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::OverrideVector{CategoricalValue{String, UInt32}}, cat3::OverrideVector{CategoricalValue{String, UInt32}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:280 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:270 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Override with different value types: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:330
  Got exception outside of a @test
  MethodError: no method matching create_categorical_override(::Symbol, ::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}})
  The function `create_categorical_override` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    create_categorical_override(!Matched::CategoricalValue, ::CategoricalArray)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:60
    create_categorical_override(!Matched::AbstractString, ::CategoricalArray)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:47
  
  Stacktrace:
    [1] create_override_vector(value::Symbol, original_column::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:168
    [2] create_override_data(original_data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}}, overrides::Dict{Symbol, Any})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:150
    [3] create_scenario(name::String, original_data::@NamedTuple{x::Vector{Float64}, y::Vector{Float64}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, ordered_cat::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, response::Vector{Float64}}; overrides::@Kwargs{cat3::Symbol})
      @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/override.jl:119
    [4] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:338 [inlined]
    [5] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [6] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:331 [inlined]
    [7] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [8] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:328 [inlined]
    [9] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [10] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
   [11] include(fname::String)
      @ Main ./sysimg.jl:38
   [12] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [13] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [14] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [15] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [16] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [17] _start()
      @ Base ./client.jl:531
Ordered categorical override: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:369
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{cat5::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, binary::Vector{Bool}, y::Vector{Float64}, response::Vector{Float64}, ordered_cat::OverrideVector{CategoricalValue{String, UInt32}}, binary_cat::CategoricalVector{Bool, UInt32, Bool, CategoricalValue{Bool, UInt32}, Union{}}, cat4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, cat3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, x::Vector{Float64}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:375 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:370 [inlined]
    [4] macro expansion
ERROR: LoadError: Some tests did not pass: 1067 passed, 0 failed, 151 errored, 0 broken.
in expression starting at /Users/emf/.julia/dev/FormulaCompiler/test/runtests.jl:25
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:328 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_categorical_correctness.jl:89
    [8] include(fname::String)
      @ Main ./sysimg.jl:38
    [9] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:35 [inlined]
   [10] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
   [11] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [12] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [13] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [14] _start()
      @ Base ./client.jl:531
ForwardDiff and FD fallback: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_derivatives.jl:67
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{y::Vector{Float64}, x::Vector{Float64}, z::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:77 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:69 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:63
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:38 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Single-column FD and parameter gradients: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_derivatives.jl:171
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{y::Vector{Float64}, x::Vector{Float64}, z::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:182 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:173 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:63
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:38 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
GLM(Logit) and MixedModels: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_derivatives.jl:273
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{GeneralizedLinearModel{GLM.GlmResp{Vector{Float64}, Binomial{Float64}, LogitLink}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{y::Vector{Int64}, x::Vector{Float64}, z::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, g::CategoricalVector{Int64, UInt32, Int64, CategoricalValue{Int64, UInt32}, Union{}}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:288 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:275 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:63
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:38 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
FD backend robustness and edge cases: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_derivatives.jl:311
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{y::Vector{Float64}, x_tiny::Vector{Float64}, x_large::Vector{Float64}, x_zero::Vector{Float64}, x_normal::Vector{Float64}, group4::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}, group2::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:329 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:313 [inlined]
    [4] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [5] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:63
    [6] include(fname::String)
      @ Main ./sysimg.jl:38
    [7] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:38 [inlined]
    [8] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [9] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
   [10] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
   [11] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [12] _start()
      @ Base ./client.jl:531
Variance Computation Primitives: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_derivatives.jl:459
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{y::Vector{Float64}, x::Vector{Float64}, z::Vector{Float64}, group::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:471 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_derivatives.jl:460
    [4] include(fname::String)
      @ Main ./sysimg.jl:38
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:38 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
    [9] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [10] _start()
      @ Base ./client.jl:531
Link functions: marginal effects μ: Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_links.jl:9
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{y::Vector{Float64}, x::Vector{Float64}, z::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_links.jl:15 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_links.jl:10
    [4] include(fname::String)
      @ Main ./sysimg.jl:38
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:39 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
    [9] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [10] _start()
      @ Base ./client.jl:531
Derivative Allocation Checks (BenchmarkTools): Error During Test at /Users/emf/.julia/dev/FormulaCompiler/test/test_derivative_allocations.jl:9
  Got exception outside of a @test
  MethodError: no method matching compile_formula(::StatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}, ::@NamedTuple{y::Vector{Float64}, x::Vector{Float64}, z::Vector{Float64}, group3::CategoricalVector{String, UInt32, String, CategoricalValue{String, UInt32}, Union{}}})
  The function `compile_formula` exists, but no method is defined for this combination of argument types.
  
  Closest candidates are:
    compile_formula(::Any; verbose)
     @ FormulaCompiler ~/.julia/packages/FormulaCompiler/2y1PE/src/CompiledFormula.jl:66
  
  Stacktrace:
    [1] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/test_derivative_allocations.jl:24 [inlined]
    [2] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [3] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/test_derivative_allocations.jl:10
    [4] include(fname::String)
      @ Main ./sysimg.jl:38
    [5] macro expansion
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:40 [inlined]
    [6] macro expansion
      @ ~/.julia/juliaup/julia-1.11.2+0.aarch64.apple.darwin14/share/julia/stdlib/v1.11/Test/src/Test.jl:1704 [inlined]
    [7] top-level scope
      @ ~/.julia/dev/FormulaCompiler/test/runtests.jl:27
    [8] include(mod::Module, _path::String)
      @ Base ./Base.jl:557
    [9] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:323
   [10] _start()
      @ Base ./client.jl:531
Test Summary:                                               | Pass  Error  Total   Time
FormulaCompiler.jl Tests                                    | 1067    151   1218  31.3s
  Position Mapping Tests                                    |          14     14  10.6s
    Basic Position Mapping                                  |           3      3   4.5s
      Simple continuous variable                            |           1      1   3.6s
      Simple categorical variable                           |           1      1   0.6s
      Multiple continuous variables                         |           1      1   0.3s
    Interaction Position Mapping                            |           4      4   3.5s
      Simple 2-way continuous interaction                   |           1      1   0.5s
      Continuous × Categorical interaction                  |           1      1   0.3s
      3-way interaction                                     |           1      1   0.9s
      4-way interaction (Kronecker ordering test)           |           1      1   1.8s
    Function Position Mapping                               |           2      2   0.9s
      Simple function                                       |           1      1   0.3s
      Function × Categorical interaction                    |           1      1   0.6s
    Complex Formula Position Mapping                        |           1      1   0.9s
      Complex mixed formula                                 |           1      1   0.9s
    Edge Cases                                              |           2      2   0.4s
      Intercept only                                        |           1      1   0.2s
      No intercept                                          |           1      1   0.2s
    Position Mapping Consistency                            |           1      1   0.0s
      Same formula produces same positions                  |           1      1   0.0s
    Performance Characteristics                             |           1      1   0.0s
      Timing benchmarks                                     |           1      1   0.0s
  Zero Allocation Survey                                    |          35     35  12.7s
    Linear Models (LM)                                      |          15     15   3.4s
      Intercept only                                        |           1      1   0.2s
      No intercept                                          |           1      1   0.1s
      Simple continuous                                     |           1      1   0.1s
      Simple categorical                                    |           1      1   0.1s
      Multiple continuous                                   |           1      1   0.1s
      Multiple categorical                                  |           1      1   0.2s
      Mixed                                                 |           1      1   0.2s
      Simple interaction                                    |           1      1   0.1s
      Interaction w/o main                                  |           1      1   0.2s
      Function                                              |           1      1   0.1s
      Function in interaction                               |           1      1   0.3s
      Three-way interaction                                 |           1      1   0.1s
      Four-way interaction                                  |           1      1   0.2s
      Four-way w/ function                                  |           1      1   1.2s
      Complex interaction                                   |           1      1   0.2s
    Generalized Linear Models (GLM)                         |          10     10   3.0s
      Logistic: simple                                      |           1      1   0.6s
      Logistic: mixed                                       |           1      1   0.1s
      Logistic: interaction                                 |           1      1   0.1s
      Logistic: function                                    |           1      1   0.5s
      Logistic: complex                                     |           1      1   0.5s
      Poisson: simple                                       |           1      1   0.4s
      Poisson: mixed                                        |           1      1   0.1s
      Poisson: interaction                                  |           1      1   0.1s
      Gamma: mixed                                          |           1      1   0.4s
      Gaussian: mixed                                       |           1      1   0.3s
    Linear Mixed Models (LMM)                               |           6      6   3.4s
      Random intercept                                      |           1      1   1.6s
      Mixed + categorical                                   |           1      1   0.4s
      Random slope                                          |           1      1   0.2s
      Random slope + cat                                    |           1      1   0.1s
      Multiple random                                       |           1      1   0.8s
      Interaction + random                                  |           1      1   0.3s
    Generalized Linear Mixed Models (GLMM)                  |           4      4   2.7s
      Logistic: 1                                           |           1      1   1.3s
      Logistic: 2                                           |           1      1   0.4s
      Poisson: 1                                            |           1      1   0.8s
      Poisson: 2                                            |           1      1   0.3s
  Model Correctness Tests                                   |          77     77   2.3s
    Linear Models (LM)                                      |          30     30   0.3s
      Intercept only                                        |           2      2   0.1s
      No intercept                                          |           2      2   0.0s
      Simple continuous                                     |           2      2   0.0s
      Simple categorical                                    |           2      2   0.0s
      Multiple continuous                                   |           2      2   0.0s
      Multiple categorical                                  |           2      2   0.0s
      Mixed                                                 |           2      2   0.0s
      Simple interaction                                    |           2      2   0.0s
      Interaction w/o main                                  |           2      2   0.0s
      Function                                              |           2      2   0.0s
      Function in interaction                               |           2      2   0.0s
      Three-way interaction                                 |           2      2   0.0s
      Four-way interaction                                  |           2      2   0.0s
      Four-way w/ function                                  |           2      2   0.0s
      Complex interaction                                   |           2      2   0.0s
    Generalized Linear Models (GLM)                         |          20     20   0.2s
      Logistic: simple                                      |           2      2   0.0s
      Logistic: mixed                                       |           2      2   0.0s
      Logistic: interaction                                 |           2      2   0.0s
      Logistic: function                                    |           2      2   0.0s
      Logistic: complex                                     |           2      2   0.0s
      Poisson: simple                                       |           2      2   0.0s
      Poisson: mixed                                        |           2      2   0.0s
      Poisson: interaction                                  |           2      2   0.0s
      Gamma: mixed                                          |           2      2   0.0s
      Gaussian: mixed                                       |           2      2   0.0s
    Linear Mixed Models (LMM)                               |          12     12   0.1s
      Random intercept                                      |           2      2   0.0s
      Mixed + categorical                                   |           2      2   0.0s
      Random slope                                          |           2      2   0.0s
      Random slope + cat                                    |           2      2   0.0s
      Multiple random                                       |           2      2   0.0s
      Interaction + random                                  |           2      2   0.0s
    Generalized Linear Mixed Models (GLMM)                  |           8      8   0.1s
      Logistic: 1                                           |           2      2   0.0s
      Logistic: 2                                           |           2      2   0.0s
      Poisson: 1                                            |           2      2   0.0s
      Poisson: 2                                            |           2      2   0.0s
    Complex Interaction Correctness                         |           3      3   0.9s
      Complex LM interaction                                |           1      1   0.0s
      Complex GLM interaction                               |           1      1   0.1s
      Complex LMM interaction                               |           1      1   0.7s
    ModelRow Interface Tests                                |           1      1   0.4s
    Scenario Integration Correctness                        |           1      1   0.0s
    Edge Case Correctness                                   |           2      2   0.4s
      Single row datasets                                   |           1      1   0.1s
      Extreme values correctness                            |           1      1   0.3s
  Override System Tests                                     | 1066      4   1070   1.1s
    OverrideVector Basic Functionality                      | 1012          1012   0.0s
    Basic Scenario Creation                                 |   12            12   0.0s
    Categorical Override Creation                           |    4      1      5   0.0s
    Categorical Scenario Creation                           |    4      1      5   0.3s
    Formula Integration with Overrides                      |           1      1   0.3s
    Scenario Grid and Collections                           |   27            27   0.3s
    Performance Validation                                  |    3             3   0.1s
    Edge Cases and Error Handling                           |    4      1      5   0.1s
  Check variable differentiation                            |           2      2   0.4s
    Varying cts. variable                                   |           1      1   0.2s
    Varying cat. variable                                   |           1      1   0.1s
  Categorical Override Tests                                |    1     12     13   1.4s
    Single Categorical - All Levels                         |           3      3   0.0s
      Level: Low                                            |           1      1   0.0s
      Level: Med                                            |           1      1   0.0s
      Level: High                                           |           1      1   0.0s
    Multiple Categoricals - Mixed Levels                    |           3      3   0.3s
      all_reference                                         |           1      1   0.1s
      all_last                                              |           1      1   0.0s
      mixed                                                 |           1      1   0.0s
    Categorical in Interaction                              |           1      1   0.1s
    Test 4: Binary Categorical Override                     |           2      2   0.3s
      Binary = true                                         |           1      1   0.1s
      Binary = false                                        |           1      1   0.0s
    Test 5: Categorical-Only Formula with Complete Override |           1      1   0.3s
    Categorical Override Edge Cases                         |    1      2      3   0.3s
      Override with different value types                   |           1      1   0.1s
      Invalid categorical level                             |    1             1   0.0s
      Ordered categorical override                          |           1      1   0.1s
  Derivative correctness                                    |           4      4   1.1s
    ForwardDiff and FD fallback                             |           1      1   0.4s
    Single-column FD and parameter gradients                |           1      1   0.0s
    GLM(Logit) and MixedModels                              |           1      1   0.2s
    FD backend robustness and edge cases                    |           1      1   0.5s
  Variance Computation Primitives                           |           1      1   0.1s
  Link functions: marginal effects μ                        |           1      1   0.0s
  Derivative Allocation Checks (BenchmarkTools)             |           1      1   0.1s
